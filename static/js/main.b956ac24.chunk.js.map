{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","addMovie","useState","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","mistake","setMistake","checkUrl","url","test","checkText","text","checkId","id","some","onSubmit","event","preventDefault","type","placeholder","classNames","value","onChange","target","startOfId","lastIndexOf","lastSlesh","slice","idFromUrl","disabled","massage","hide","App","state","moviesFromServer","setState","prevState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b956ac24.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\n\nimport classNames from 'classnames';\nimport './NewMovie.scss';\n\ninterface Props {\n  addMovie: (title: string,\n    description: string,\n    imgUrl: string,\n    imdbUrl: string,\n    imdbId: string,\n  ) => void,\n  movies: Movie[],\n}\n\nexport const NewMovie: React.FC<Props> = ({ addMovie, movies }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const [mistake, setMistake] = useState(false);\n\n  const checkUrl = (url: string) => {\n    // eslint-disable-next-line max-len\n    return (/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/).test(url);\n  };\n\n  const checkText = (text: string) => {\n    return (/^[\\w а-яА-я!?\"'-:;.,]+$/).test(text);\n  };\n\n  const checkId = (id: string) => {\n    return !movies.some((movie: Movie) => movie.imdbId === id);\n  };\n\n  const idFromUrl = (url: string) => {\n    const startOfId = url.lastIndexOf('/tt') + 1;\n    const lastSlesh = url.slice(startOfId).lastIndexOf('/');\n\n    if (lastSlesh !== -1) {\n      setImdbId(url.slice(startOfId, lastSlesh));\n    }\n\n    setImdbId(url.slice(startOfId));\n  };\n\n  const urlOnChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    setImdbUrl(event.target.value);\n    idFromUrl(event.target.value);\n    setMistake(false);\n  };\n\n  const newFilmCard: React.FormEventHandler<HTMLFormElement> = (event) => {\n    event.preventDefault();\n\n    // eslint-disable-next-line max-len\n    if (checkUrl(imgUrl) && checkUrl(imdbUrl) && checkId(imdbId) && checkText(title) && checkText(description)) {\n      addMovie(title, description, imgUrl, imdbUrl, imdbId);\n\n      setTitle('');\n      setDescription('');\n      setImgUrl('');\n      setImdbUrl('');\n      setImdbId('');\n    } else {\n      setMistake(true);\n    }\n  };\n\n  return (\n    <form onSubmit={newFilmCard} className=\"column m-2\">\n      <input\n        type=\"text\"\n        placeholder=\"The title of new movie\"\n        className={\n          classNames('input m-1', { 'is-danger': mistake && !checkText(title) })\n        }\n        value={title}\n        onChange={event => {\n          setTitle(event.target.value);\n          setMistake(false);\n        }}\n      />\n      <input\n        type=\"text\"\n        className={\n          classNames(\n            'input m-1',\n            { 'is-danger': mistake && !checkText(description) },\n          )\n        }\n        placeholder=\"Description of the movie\"\n        value={description}\n        onChange={event => {\n          setDescription(event.target.value);\n          setMistake(false);\n        }}\n      />\n      <input\n        type=\"text\"\n        className={\n          classNames('input m-1', { 'is-danger': mistake && !checkUrl(imgUrl) })\n        }\n        placeholder=\"Add URL at the poster\"\n        value={imgUrl}\n        onChange={event => {\n          setImgUrl(event.target.value);\n          setMistake(false);\n        }}\n      />\n      <input\n        type=\"text\"\n        className={\n          classNames('input m-1',\n            {\n              'is-danger': mistake && (!checkUrl(imdbUrl) || !checkId(imdbId)),\n            })\n        }\n        placeholder=\"https://www.imdb.com/title/tt...\"\n        value={imdbUrl}\n        onChange={urlOnChange}\n      />\n      <button\n        type=\"submit\"\n        disabled={mistake}\n        className=\"button m-2\"\n      >\n        Add\n      </button>\n      <span\n        className={classNames('input m-1',\n          {\n            massage: mistake,\n            hide: !mistake,\n          })}\n      >\n        Please, check your inputs\n      </span>\n    </form>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: [...moviesFromServer],\n  };\n\n  addMovie = (\n    title: string,\n    description: string,\n    imgUrl: string,\n    imdbUrl: string,\n    imdbId: string,\n  ) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, {\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      }],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} movies={movies} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}